name: Backend Quality

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'services/**/*.go'
      - 'services/**/go.*'
      - 'pkg/**/*.go'
      - 'pkg/**/go.*'
      - '.golangci.yml'

jobs:
  quality:
    name: Backend Quality Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
        
      - name: Run golangci-lint on services
        run: |
          for d in services/*/; do
            if [ -f "$d/go.mod" ]; then
              echo "Running golangci-lint in $d"
              cd "$d"
              golangci-lint run ./...
              cd -
            fi
          done
        
      - name: Run golangci-lint on pkg
        if: hashFiles('pkg/go.mod') != ''
        working-directory: ./pkg
        run: golangci-lint run ./...
        
      - name: Check formatting
        run: |
          BADLY_FORMATTED=$(find . -path "*/pkg/*.go" -o -path "*/services/*.go" -type f -exec gofmt -l {} \;)
          if [ -n "$BADLY_FORMATTED" ]; then
            echo "The following files are not formatted correctly:"
            echo "$BADLY_FORMATTED"
            exit 1
          fi
          
      - name: Run Go tests in services
        run: |
          for d in services/*/; do
            if [ -f "$d/go.mod" ]; then
              echo "Running tests in $d"
              cd "$d"
              go test -v ./...
              cd -
            fi
          done
        
      - name: Run Go tests in pkg
        if: hashFiles('pkg/go.mod') != ''
        working-directory: ./pkg
        run: go test -v ./...
